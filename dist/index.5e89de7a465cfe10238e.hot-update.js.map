{"version":3,"sources":["webpack:///./app/bizMod/abnormity/bizMod/script/controller/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/script/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/script/router/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/script/service/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/user/controller/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/user/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/user/router/index.js?undefined","webpack:///./app/bizMod/abnormity/bizMod/user/service/index.js?undefined","webpack:///./app/bizMod/abnormity/index.js?undefined","webpack:///./app/bizMod/abnormity/router/index.js?undefined","webpack:///./app/bizMod/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/download/controller/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/download/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/download/router/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/download/service/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/network/controller/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/network/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/network/router/index.js?undefined","webpack:///./app/bizMod/performance/bizMod/network/service/index.js?undefined","webpack:///./app/bizMod/performance/index.js?undefined","webpack:///./app/bizMod/performance/router/index.js?undefined","webpack:///./app/routes/index.js?undefined","webpack:///external \"koa-router\"?undefined"],"names":["Controller","query","ctx","next","console","log","response","request","body","parameter","service","data","add","edit","set","page","params","login","userService","getMessage","status","token","userInfo","message","merge","unauthorized","msg","code","router","constructor","app","parentRouter","init","createRouter","threeLevelRoute","koaRoute","prefix","middleware","addRouters","use","routes","get","controller","post","Service","name","twoLevelRoute","scriptRouter","userRouter","checkSchemas","checkSchema","schema","typeDefs","schemas","resolvers","Mutation","Query","Subscription","abnormitySchema","performanceSchema","schemaKeys","Object","keys","key","push","abnormityRouter","performanceRouter","networkRouter","downloadRouter","hello","Route","Router","common","checkToken","header","cookies","getUserIfo","then","value","catch","error","User","type","shtml","Promise","resolve","reject","fs","path","__dirname","err","replace","renderToString","allowedMethods"],"mappings":"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C,KAA9C;AACD;;AACDW,KAAG,GAAG;AACJ;AACA,SAAKsB,eAAL,CAAqBS,IAArB,CAA0B,MAA1B,EAAkCD,UAAU,CAAC9B,GAA7C;AACD;;AACDC,MAAI,GAAG;AACL;AACC,SAAKqB,eAAL,CAAqBS,IAArB,CAA0B,OAA1B,EAAmCD,UAAU,CAAC7B,IAA9C;AACF;;AAtDU;;AAyDb,sEAAee,sDAAf,I;;;;;;;;;;;AC5DA,MAAMgB,OAAN,CAAc;AACZ,eAAa3C,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BM,SAA9B,EAAyC;AACvC,WAAO;AACLoC,UAAI,EAAE,SADD;AAEL,SAAGpC;AAFE,KAAP;AAID,GANW,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3IY;;AA8Id,sEAAemC,uDAAf,I;;;;;;;;;;;;AC9IA;;AAEA,MAAM5C,UAAN,CAAiB;AACf,eAAaC,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5BC,WAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,UAAM;AAAEJ,WAAK,GAAG,EAAV;AAAcK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CAAqBS,IAArB,CAA0B,OAA1B,EAAmCD,UAAU,CAAC7B,IAA9C;AACF;;AAtDU;;AAyDb,sEAAee,sDAAf,I;;;;;;;;;;;AC5DA,MAAMgB,OAAN,CAAc;AACZ,eAAa3C,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BM,SAA9B,EAAyC;AACvC,WAAO;AACLoC,UAAI,EAAE,SADD;AAEL,SAAGpC;AAFE,KAAP;AAID,GANW,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3IY;;AA8Id,sEAAemC,uDAAf,I;;;;;;;;;;;;;;;;AC9IA;AAEA;;CAGA,6E;;;;;;;;;;;;;;;CCLmC;;CACsB;;CACJ;;AAErD,MAAMhB,MAAN,CAAa;AACXC,aAAW,CAACC,GAAD,EAAMC,YAAN,EAAoB;AAC7B,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKF,MAAL,GAAcG,YAAd;AACA,SAAKC,IAAL;AACD;;AACDC,cAAY,GAAG;AACb,SAAKa,aAAL,GAAqB,IAAIX,QAAJ,CAAa;AAChCC,YAAM,EAAE,YADwB,CACV;;AADU,KAAb,CAAr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ACL;AACA,SAAKC,YAAL,GAFK,CAGL;;AACA,SAAKI,UAAL,GAJK,CAKL;;AACA,SAAKC,UAAL;AACD;;AACDrC,OAAK,GAAG;AAEN;AACA,SAAKiC,eAAL,CAAqBO,GAArB,CAAyB,QAAzB,EAAmCC,UAAU,CAACzC,KAA9C;AACD;;AACDW,KAAG,GAAG;AACJ;AACA,SAAKsB,eAAL,CAAqBS,IAArB,CAA0B,MAA1B,EAAkCD,UAAU,CAAC9B,GAA7C;AACD;;AACDC,MAAI,GAAG;AACL;AACC,SAAKqB,eAAL,CAAqBS,IAArB,CAA0B,OAA1B,EAAmCD,UAAU,CAAC7B,IAA9C;AACF;;AAtDU;;AAyDb,sEAAee,sDAAf,I;;;;;;;;;;;AC5DA,MAAMgB,OAAN,CAAc;AACZ,eAAa3C,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BM,SAA9B,EAAyC;AACvC,WAAO;AACLoC,UAAI,EAAE,SADD;AAEL,SAAGpC;AAFE,KAAP;AAID,GANW,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3IY;;AA8Id,sEAAemC,uDAAf,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zC,KAA9C;AACD;;AACDW,KAAG,GAAG;AACJ;AACA,SAAKsB,eAAL,CAAqBS,IAArB,CAA0B,MAA1B,EAAkCD,UAAU,CAAC9B,GAA7C;AACD;;AACDC,MAAI,GAAG;AACL;AACC,SAAKqB,eAAL,CAAqBS,IAArB,CAA0B,OAA1B,EAAmCD,UAAU,CAAC7B,IAA9C;AACF;;AAtDU;;AAyDb,sEAAee,sDAAf,I;;;;;;;;;;;AC5DA,MAAMgB,OAAN,CAAc;AACZ,eAAa3C,KAAb,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BM,SAA9B,EAAyC;AACvC,WAAO;AACLoC,UAAI,EAAE,SADD;AAEL,SAAGpC;AAFE,KAAP;AAID,GANW,CAOZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3IY;;AA8Id,sEAAemC,uDAAf,I;;;;;;;;;;;;;;;;AC9IA;AAEA;;CAGA,6E;;;;;;;;;;;;;;;CCLmC;;CACwB;;CACE;;AAE7D,MAAMhB,MAAN,CAAa;AACXC,aAAW,CAACC,GAAD,EAAMC,YAAN,EAAoB;AAC7B,SAAKD,GAAL,GAAWA,GAAX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","file":"index.5e89de7a465cfe10238e.hot-update.js","sourcesContent":["import service from \"../service\";\n \nclass Controller {  \n  static async query(ctx, next) { \n    \n    console.log('Controller_query12341==')\n    const { query = {}, response, request } = ctx;\n    const {\n      body = {\n         // mutation = '', variables = {}\n      },\n    } = request;\n    const parameter = query; // 获取请求参数\n    console.log('service.query==', service.query)\n    //添加service\n    const data = await service.query(ctx, next, parameter);\n    ctx.response.body = data;\n  }\n  static async add(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    const parameter = ctx.request.body; // 获取请求参数\n\n    // //添加service\n    // const data = await userService.add(ctx, next, parameter);\n    // const getMessage = (data) => {\n    //   const { status } = data;\n    //   const message = {\n    //     1: () =>\n    //       merge(unsupported, {\n    //         msg: \"该用户名已经被注册过,请重新输入用户名\",\n    //       }),\n    //     2: () =>\n    //       merge(unsupported, {\n    //         msg: \"该手机号码已经被注册过,请重新输入手机号码\",\n    //       }),\n    //     3: () => ({\n    //       code: 200,\n    //       msg: \"注册成功\",\n    //     }),\n    //   };\n    // return message[status]();\n    // };\n    ctx.response.body = parameter;\n  }\n  static edit(ctx, next) {\n    ctx.set(\"Content-Type\", \"application/json\");\n\n    var page = ctx.params.page; // 获取请求参数\n    //添加service\n    // const data = userService.list(page);\n\n    // ctx.response.body = \"d\";\n  }\n\n  static async login(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    var parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.login(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status, token, userInfo } = data;\n      const message = {\n        1: () =>\n          merge(unauthorized, {\n            msg: \"用户名错误，请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unauthorized, {\n            msg: \"密码错误请重新输入密码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"登录成功\",\n          data: {\n            token,\n            userInfo,\n          },\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n}\n\nexport default Controller;\n","export {default as router} from \"./router\";\nexport {default as schema} from \"./graphql/schema\";\n\n \n","import controller from \"../controller\";\nimport koaRoute from \"koa-router\"; // koa 路由中间件\n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.threeLevelRoute = new koaRoute({\n      prefix: \"/script\", // 给路由统一加个前缀：\n    });\n    return this.threeLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 注册路由\n    this.query();\n    this.add();\n    this.edit();\n    this.router.use(this.threeLevelRoute.routes()); //挂载二级路由\n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n  query() {\n    \n    // 添加 接口\n    this.threeLevelRoute.get(\"/query\", controller.query);\n  }\n  add() {\n    // 添加 接口\n    this.threeLevelRoute.post(\"/add\", controller.add);\n  }\n  edit() {\n    // 添加 接口\n     this.threeLevelRoute.post(\"/edit\", controller.edit);\n  }\n}\n\nexport default router;\n","class Service {\n  static async query(ctx, next, parameter) {\n    return {\n      name: \"Service\",\n      ...parameter,\n    };\n  }\n  // static list(page) {\n  //     console.log('page=', page);\n  //     const dataList = {\n  //         list: [\n  //             {\n  //                 time: '2019-7-10',\n  //                 id: 1,\n  //                 title: 'this is news 1',\n  //                 url: '/news/1',\n  //             },\n  //             {\n  //                 time: '2019-8-10',\n  //                 id: 2,\n  //                 title: 'this is news 2',\n  //                 url: '/news/2',\n  //             },\n  //         ],\n  //     };\n\n  //     return dataList.list[page] || {};\n  // }\n\n  // //注册用户\n  // static async add(ctx, next, parameter) {\n  //     const { username: name, phone, password } = parameter;\n  //     /*\n  //  1 查询用户名是否被注册过，\n  //  2 查询手机号码是否被注册过\n  //  3 如果都没有被注册那么就可以注册\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         phone,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     const data = await addUser({\n  //         name,\n  //         phone,\n  //         password,\n  //     });\n  //     if (data) {\n  //         return {\n  //             status: 3,\n  //         };\n  //     }\n  // }\n  // // 编辑用户\n  // static async edit(ctx, next, parameter) {}\n  // // 数据库中查询用户\n  // static async queryUser(...ags) {\n  //     const userData = await queryUser(...ags);\n  //     return userData;\n  // }\n  // // 登录\n  // static async login(ctx, next, parameter = {}) {\n  //     const { username: name, phone, password } = parameter;\n  //     const { request, response,cookies } = ctx;\n\n  //     /*\n  //   1.先查询用户名是否正确，\n  //   2.查询用户和密码是否正确\n  //   3.创建token,存储到redis中\n  //   4.把用户信息挂载response中\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     userInfo = await queryUser({\n  //         name,\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n\n  //     /*\n  //  创建 createToken\n  // */\n  //     const token = await createToken(userInfo);\n  //     delete userInfo.password;\n  //     ctx.response.userInfo = userInfo;\n  //     console.log('setExpirationTime=', setExpirationTime());\n  //     // console.log('token=', token);\n  //     // console.log('request=', request);\n  //     // console.log('session=', session);\n  //    console.log('cookies===',cookies)\n\n  //     // cookie.expires = false;\n  //     // cookie.maxAge = 5 * 60 * 1000;\n  //     cookies.set('token', token, {\n  //         httpOnly: false,\n  //         overwrite: false,\n  //         // expires: setExpirationTime(),\n  //     });\n  //     if (userInfo) {\n  //         //登录成功\n  //         return {\n  //             status: 3,\n  //             token,\n  //             userInfo,\n  //         };\n  //     }\n  // }\n}\n\nexport default Service;\n","import service from \"../service\";\n\nclass Controller {\n  static async query(ctx, next) { \n    console.log('Controller_query12341==')\n    const { query = {}, response, request } = ctx;\n    const {\n      body = {\n         // mutation = '', variables = {}\n      },\n    } = request;\n    const parameter = query; // 获取请求参数\n    console.log('service.query==', service.query)\n    //添加service\n    const data = await service.query(ctx, next, parameter);\n    ctx.response.body = data;\n  }\n  static async add(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    const parameter = ctx.request.body; // 获取请求参数\n\n    // //添加service\n    // const data = await userService.add(ctx, next, parameter);\n    // const getMessage = (data) => {\n    //   const { status } = data;\n    //   const message = {\n    //     1: () =>\n    //       merge(unsupported, {\n    //         msg: \"该用户名已经被注册过,请重新输入用户名\",\n    //       }),\n    //     2: () =>\n    //       merge(unsupported, {\n    //         msg: \"该手机号码已经被注册过,请重新输入手机号码\",\n    //       }),\n    //     3: () => ({\n    //       code: 200,\n    //       msg: \"注册成功\",\n    //     }),\n    //   };\n    // return message[status]();\n    // };\n    ctx.response.body = parameter;\n  }\n  static edit(ctx, next) {\n    ctx.set(\"Content-Type\", \"application/json\");\n\n    var page = ctx.params.page; // 获取请求参数\n    //添加service\n    // const data = userService.list(page);\n\n    // ctx.response.body = \"d\";\n  }\n\n  static async login(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    var parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.login(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status, token, userInfo } = data;\n      const message = {\n        1: () =>\n          merge(unauthorized, {\n            msg: \"用户名错误，请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unauthorized, {\n            msg: \"密码错误请重新输入密码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"登录成功\",\n          data: {\n            token,\n            userInfo,\n          },\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n}\n\nexport default Controller;\n","export {default as router} from \"./router\";\nexport {default as schema} from \"./graphql/schema\";\n\n// import {default as schema} from \"./graphql/schema\";\n \n\n// console.log('schema2==========',schema)","import controller from \"../controller\";\nimport koaRoute from \"koa-router\"; // koa 路由中间件\n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.threeLevelRoute = new koaRoute({\n      prefix: \"/user\", // 给路由统一加个前缀：\n    });\n    return this.threeLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 注册路由\n    this.query();\n    this.add();\n    this.edit();\n    this.router.use(this.threeLevelRoute.routes()); //挂载二级路由\n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n  query() {\n   \n    // 添加 接口\n    this.threeLevelRoute.get(\"/query\", controller.query);\n  }\n  add() {\n    // 添加 接口\n    this.threeLevelRoute.post(\"/add\", controller.add);\n  }\n  edit() {\n    // 添加 接口\n     this.threeLevelRoute.post(\"/edit\", controller.edit);\n  }\n}\n\nexport default router;\n","class Service {\n  static async query(ctx, next, parameter) {\n    return {\n      name: \"Service\",\n      ...parameter,\n    };\n  }\n  // static list(page) {\n  //     console.log('page=', page);\n  //     const dataList = {\n  //         list: [\n  //             {\n  //                 time: '2019-7-10',\n  //                 id: 1,\n  //                 title: 'this is news 1',\n  //                 url: '/news/1',\n  //             },\n  //             {\n  //                 time: '2019-8-10',\n  //                 id: 2,\n  //                 title: 'this is news 2',\n  //                 url: '/news/2',\n  //             },\n  //         ],\n  //     };\n\n  //     return dataList.list[page] || {};\n  // }\n\n  // //注册用户\n  // static async add(ctx, next, parameter) {\n  //     const { username: name, phone, password } = parameter;\n  //     /*\n  //  1 查询用户名是否被注册过，\n  //  2 查询手机号码是否被注册过\n  //  3 如果都没有被注册那么就可以注册\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         phone,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     const data = await addUser({\n  //         name,\n  //         phone,\n  //         password,\n  //     });\n  //     if (data) {\n  //         return {\n  //             status: 3,\n  //         };\n  //     }\n  // }\n  // // 编辑用户\n  // static async edit(ctx, next, parameter) {}\n  // // 数据库中查询用户\n  // static async queryUser(...ags) {\n  //     const userData = await queryUser(...ags);\n  //     return userData;\n  // }\n  // // 登录\n  // static async login(ctx, next, parameter = {}) {\n  //     const { username: name, phone, password } = parameter;\n  //     const { request, response,cookies } = ctx;\n\n  //     /*\n  //   1.先查询用户名是否正确，\n  //   2.查询用户和密码是否正确\n  //   3.创建token,存储到redis中\n  //   4.把用户信息挂载response中\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     userInfo = await queryUser({\n  //         name,\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n\n  //     /*\n  //  创建 createToken\n  // */\n  //     const token = await createToken(userInfo);\n  //     delete userInfo.password;\n  //     ctx.response.userInfo = userInfo;\n  //     console.log('setExpirationTime=', setExpirationTime());\n  //     // console.log('token=', token);\n  //     // console.log('request=', request);\n  //     // console.log('session=', session);\n  //    console.log('cookies===',cookies)\n\n  //     // cookie.expires = false;\n  //     // cookie.maxAge = 5 * 60 * 1000;\n  //     cookies.set('token', token, {\n  //         httpOnly: false,\n  //         overwrite: false,\n  //         // expires: setExpirationTime(),\n  //     });\n  //     if (userInfo) {\n  //         //登录成功\n  //         return {\n  //             status: 3,\n  //             token,\n  //             userInfo,\n  //         };\n  //     }\n  // }\n}\n\nexport default Service;\n","// export * as script from \"./bizMod/script\";\n\nexport { default as router } from \"./router\";\nexport * as schema from \"./graphql/schema\";\n\n// export { schema as scriptSchema} from \"./bizMod/script\"; //scriptRouter 路由  \n","import koaRoute from \"koa-router\"; // koa 路由中间件\nimport {router as scriptRouter} from \"../bizMod/script\"; //scriptRouter 路由  \nimport {router as userRouter} from \"../bizMod/user\"; //userRouter 路由  \n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.twoLevelRoute = new koaRoute({\n      prefix: \"/abnormity\", // 给路由统一加个前缀：\n    });\n    return this.twoLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 为script模块添加路由\n    new scriptRouter(this.app,this.twoLevelRoute);\n    new userRouter(this.app,this.twoLevelRoute);\n    // 添加路由\n    this.router.use(this.twoLevelRoute.routes()); //挂载二级路由\n    \n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n}\n\nexport default router;","import {\n  // 动态导入模块\n  router as abnormityRouter,\n  schema as abnormitySchema,\n} from \"./abnormity\";\nimport {\n  // 动态导入模块\n  router as performanceRouter,\n  schema as performanceSchema,\n} from \"./performance\";\nimport { checkSchema } from \"@/utils\";\nconst checkSchemas = checkSchema();\nexport const schema = (() => {\n  let typeDefs = {\n    schema: \"\",\n    schemas: [],\n  };\n  let resolvers = {\n    Mutation: {},\n    Query: {},\n    Subscription: {},\n  };\n\n  // 动态添加模块\n  const schemas = {\n    ...abnormitySchema,\n    ...performanceSchema,\n  };\n\n  const schemaKeys = Object.keys(schemas);\n\n  for (let key of schemaKeys) {\n    typeDefs.schema += schemas[key].typeDefs.schema + \"\\n\";\n    typeDefs.schemas.push(schemas[key].typeDefs.schema);\n    checkSchemas(resolvers, schemas[key].resolvers);\n  }\n\n  return {\n    typeDefs,\n    resolvers,\n  };\n})();\nexport const router = (app, router) => {\n  // 动态添加模块\n  new abnormityRouter(app, router);\n  new performanceRouter(app, router);\n};\n","import service from \"../service\";\n\nclass Controller {\n  static async query(ctx, next) { \n    console.log('Controller_query12341==')\n    const { query = {}, response, request } = ctx;\n    const {\n      body = {\n         // mutation = '', variables = {}\n      },\n    } = request;\n    const parameter = query; // 获取请求参数\n    console.log('service.query==', service.query)\n    //添加service\n    const data = await service.query(ctx, next, parameter);\n    ctx.response.body = data;\n  }\n  static async add(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    const parameter = ctx.request.body; // 获取请求参数\n\n    // //添加service\n    // const data = await userService.add(ctx, next, parameter);\n    // const getMessage = (data) => {\n    //   const { status } = data;\n    //   const message = {\n    //     1: () =>\n    //       merge(unsupported, {\n    //         msg: \"该用户名已经被注册过,请重新输入用户名\",\n    //       }),\n    //     2: () =>\n    //       merge(unsupported, {\n    //         msg: \"该手机号码已经被注册过,请重新输入手机号码\",\n    //       }),\n    //     3: () => ({\n    //       code: 200,\n    //       msg: \"注册成功\",\n    //     }),\n    //   };\n    // return message[status]();\n    // };\n    ctx.response.body = parameter;\n  }\n  static edit(ctx, next) {\n    ctx.set(\"Content-Type\", \"application/json\");\n\n    var page = ctx.params.page; // 获取请求参数\n    //添加service\n    // const data = userService.list(page);\n\n    // ctx.response.body = \"d\";\n  }\n\n  static async login(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    var parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.login(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status, token, userInfo } = data;\n      const message = {\n        1: () =>\n          merge(unauthorized, {\n            msg: \"用户名错误，请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unauthorized, {\n            msg: \"密码错误请重新输入密码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"登录成功\",\n          data: {\n            token,\n            userInfo,\n          },\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n}\n\nexport default Controller;\n","export {default as router} from \"./router\";\nexport {default as schema} from \"./graphql/schema\";\n\n \n","import controller from \"../controller\";\nimport koaRoute from \"koa-router\"; // koa 路由中间件\n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.threeLevelRoute = new koaRoute({\n      prefix: \"/download\", // 给路由统一加个前缀：\n    });\n    return this.threeLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 注册路由\n    this.query();\n    this.add();\n    this.edit();\n    this.router.use(this.threeLevelRoute.routes()); //挂载二级路由\n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n  query() {\n   \n    // 添加 接口\n    this.threeLevelRoute.get(\"/query\", controller.query);\n  }\n  add() {\n    // 添加 接口\n    this.threeLevelRoute.post(\"/add\", controller.add);\n  }\n  edit() {\n    // 添加 接口\n     this.threeLevelRoute.post(\"/edit\", controller.edit);\n  }\n}\n\nexport default router;\n","class Service {\n  static async query(ctx, next, parameter) {\n    return {\n      name: \"Service\",\n      ...parameter,\n    };\n  }\n  // static list(page) {\n  //     console.log('page=', page);\n  //     const dataList = {\n  //         list: [\n  //             {\n  //                 time: '2019-7-10',\n  //                 id: 1,\n  //                 title: 'this is news 1',\n  //                 url: '/news/1',\n  //             },\n  //             {\n  //                 time: '2019-8-10',\n  //                 id: 2,\n  //                 title: 'this is news 2',\n  //                 url: '/news/2',\n  //             },\n  //         ],\n  //     };\n\n  //     return dataList.list[page] || {};\n  // }\n\n  // //注册用户\n  // static async add(ctx, next, parameter) {\n  //     const { username: name, phone, password } = parameter;\n  //     /*\n  //  1 查询用户名是否被注册过，\n  //  2 查询手机号码是否被注册过\n  //  3 如果都没有被注册那么就可以注册\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         phone,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     const data = await addUser({\n  //         name,\n  //         phone,\n  //         password,\n  //     });\n  //     if (data) {\n  //         return {\n  //             status: 3,\n  //         };\n  //     }\n  // }\n  // // 编辑用户\n  // static async edit(ctx, next, parameter) {}\n  // // 数据库中查询用户\n  // static async queryUser(...ags) {\n  //     const userData = await queryUser(...ags);\n  //     return userData;\n  // }\n  // // 登录\n  // static async login(ctx, next, parameter = {}) {\n  //     const { username: name, phone, password } = parameter;\n  //     const { request, response,cookies } = ctx;\n\n  //     /*\n  //   1.先查询用户名是否正确，\n  //   2.查询用户和密码是否正确\n  //   3.创建token,存储到redis中\n  //   4.把用户信息挂载response中\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     userInfo = await queryUser({\n  //         name,\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n\n  //     /*\n  //  创建 createToken\n  // */\n  //     const token = await createToken(userInfo);\n  //     delete userInfo.password;\n  //     ctx.response.userInfo = userInfo;\n  //     console.log('setExpirationTime=', setExpirationTime());\n  //     // console.log('token=', token);\n  //     // console.log('request=', request);\n  //     // console.log('session=', session);\n  //    console.log('cookies===',cookies)\n\n  //     // cookie.expires = false;\n  //     // cookie.maxAge = 5 * 60 * 1000;\n  //     cookies.set('token', token, {\n  //         httpOnly: false,\n  //         overwrite: false,\n  //         // expires: setExpirationTime(),\n  //     });\n  //     if (userInfo) {\n  //         //登录成功\n  //         return {\n  //             status: 3,\n  //             token,\n  //             userInfo,\n  //         };\n  //     }\n  // }\n}\n\nexport default Service;\n","import service from \"../service\";\n\nclass Controller {\n  static async query(ctx, next) { \n    console.log('Controller_query12341==')\n    const { query = {}, response, request } = ctx;\n    const {\n      body = {\n         // mutation = '', variables = {}\n      },\n    } = request;\n    const parameter = query; // 获取请求参数\n    console.log('service.query==', service.query)\n    //添加service\n    const data = await service.query(ctx, next, parameter);\n    ctx.response.body = data;\n  }\n  static async add(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    const parameter = ctx.request.body; // 获取请求参数\n\n    // //添加service\n    // const data = await userService.add(ctx, next, parameter);\n    // const getMessage = (data) => {\n    //   const { status } = data;\n    //   const message = {\n    //     1: () =>\n    //       merge(unsupported, {\n    //         msg: \"该用户名已经被注册过,请重新输入用户名\",\n    //       }),\n    //     2: () =>\n    //       merge(unsupported, {\n    //         msg: \"该手机号码已经被注册过,请重新输入手机号码\",\n    //       }),\n    //     3: () => ({\n    //       code: 200,\n    //       msg: \"注册成功\",\n    //     }),\n    //   };\n    // return message[status]();\n    // };\n    ctx.response.body = parameter;\n  }\n  static edit(ctx, next) {\n    ctx.set(\"Content-Type\", \"application/json\");\n\n    var page = ctx.params.page; // 获取请求参数\n    //添加service\n    // const data = userService.list(page);\n\n    // ctx.response.body = \"d\";\n  }\n\n  static async login(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    var parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.login(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status, token, userInfo } = data;\n      const message = {\n        1: () =>\n          merge(unauthorized, {\n            msg: \"用户名错误，请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unauthorized, {\n            msg: \"密码错误请重新输入密码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"登录成功\",\n          data: {\n            token,\n            userInfo,\n          },\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n}\n\nexport default Controller;\n","export {default as router} from \"./router\";\nexport {default as schema} from \"./graphql/schema\";\n\n \n","import controller from \"../controller\";\nimport koaRoute from \"koa-router\"; // koa 路由中间件\n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.threeLevelRoute = new koaRoute({\n      prefix: \"/network\", // 给路由统一加个前缀：\n    });\n    return this.threeLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 注册路由\n    this.query();\n    this.add();\n    this.edit();\n    this.router.use(this.threeLevelRoute.routes()); //挂载二级路由\n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n  query() {\n    \n    // 添加 接口\n    this.threeLevelRoute.get(\"/query\", controller.query);\n  }\n  add() {\n    // 添加 接口\n    this.threeLevelRoute.post(\"/add\", controller.add);\n  }\n  edit() {\n    // 添加 接口\n     this.threeLevelRoute.post(\"/edit\", controller.edit);\n  }\n}\n\nexport default router;\n","class Service {\n  static async query(ctx, next, parameter) {\n    return {\n      name: \"Service\",\n      ...parameter,\n    };\n  }\n  // static list(page) {\n  //     console.log('page=', page);\n  //     const dataList = {\n  //         list: [\n  //             {\n  //                 time: '2019-7-10',\n  //                 id: 1,\n  //                 title: 'this is news 1',\n  //                 url: '/news/1',\n  //             },\n  //             {\n  //                 time: '2019-8-10',\n  //                 id: 2,\n  //                 title: 'this is news 2',\n  //                 url: '/news/2',\n  //             },\n  //         ],\n  //     };\n\n  //     return dataList.list[page] || {};\n  // }\n\n  // //注册用户\n  // static async add(ctx, next, parameter) {\n  //     const { username: name, phone, password } = parameter;\n  //     /*\n  //  1 查询用户名是否被注册过，\n  //  2 查询手机号码是否被注册过\n  //  3 如果都没有被注册那么就可以注册\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         phone,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (userInfo && userInfo.id) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     const data = await addUser({\n  //         name,\n  //         phone,\n  //         password,\n  //     });\n  //     if (data) {\n  //         return {\n  //             status: 3,\n  //         };\n  //     }\n  // }\n  // // 编辑用户\n  // static async edit(ctx, next, parameter) {}\n  // // 数据库中查询用户\n  // static async queryUser(...ags) {\n  //     const userData = await queryUser(...ags);\n  //     return userData;\n  // }\n  // // 登录\n  // static async login(ctx, next, parameter = {}) {\n  //     const { username: name, phone, password } = parameter;\n  //     const { request, response,cookies } = ctx;\n\n  //     /*\n  //   1.先查询用户名是否正确，\n  //   2.查询用户和密码是否正确\n  //   3.创建token,存储到redis中\n  //   4.把用户信息挂载response中\n  // */\n  //     let userInfo = await this.queryUser({\n  //         name,\n  //     });\n\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 1,\n  //         };\n  //     }\n\n  //     userInfo = await this.queryUser({\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n  //     if (!userInfo) {\n  //         return {\n  //             status: 2,\n  //         };\n  //     }\n  //     userInfo = await queryUser({\n  //         name,\n  //         password,\n  //     });\n  //     userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n\n  //     /*\n  //  创建 createToken\n  // */\n  //     const token = await createToken(userInfo);\n  //     delete userInfo.password;\n  //     ctx.response.userInfo = userInfo;\n  //     console.log('setExpirationTime=', setExpirationTime());\n  //     // console.log('token=', token);\n  //     // console.log('request=', request);\n  //     // console.log('session=', session);\n  //    console.log('cookies===',cookies)\n\n  //     // cookie.expires = false;\n  //     // cookie.maxAge = 5 * 60 * 1000;\n  //     cookies.set('token', token, {\n  //         httpOnly: false,\n  //         overwrite: false,\n  //         // expires: setExpirationTime(),\n  //     });\n  //     if (userInfo) {\n  //         //登录成功\n  //         return {\n  //             status: 3,\n  //             token,\n  //             userInfo,\n  //         };\n  //     }\n  // }\n}\n\nexport default Service;\n","// export * as script from \"./bizMod/script\";\n\nexport { default as router } from \"./router\";\nexport * as schema from \"./graphql/schema\";\n\n// export { schema as scriptSchema} from \"./bizMod/script\"; //scriptRouter 路由  \n","import koaRoute from \"koa-router\"; // koa 路由中间件\nimport {router as networkRouter} from \"../bizMod/network\"; //networkRouter 路由  \nimport {router as downloadRouter} from \"../bizMod/download\"; //downloadRouter 路由  \n\nclass router {\n  constructor(app, parentRouter) {\n    this.app = app;\n    this.router = parentRouter;\n    this.init();\n  }\n  createRouter() {\n    this.twoLevelRoute = new koaRoute({\n      prefix: \"/performance\", // 给路由统一加个前缀：\n    });\n    return this.twoLevelRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 为script模块添加路由\n    new networkRouter(this.app,this.twoLevelRoute);\n    new downloadRouter(this.app,this.twoLevelRoute);\n\n   \n    // 添加路由\n    this.router.use(this.twoLevelRoute.routes()); //挂载二级路由\n    \n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n}\n\nexport default router;","// import {\n//   GraphQLObjectType,\n//   GraphQLNonNull,\n//   GraphQLSchema,\n//   GraphQLString,\n//   GraphQLList,\n// } from \"graphql/type\";\nimport {\n  graphql,\n  Source,\n  validateSchema,\n  parse,\n  validate,\n  execute,\n  formatError,\n  getOperationAST,\n  specifiedRules,\n  validationRules,\n  // gql,\n} from \"graphql\";\nimport httpError from \"http-errors\";\nimport { createToken, checkToken, destroyToken, getUserIfo } from \"@/redis\";\nimport { merge } from \"@/utils\";\nimport { graphqlError } from \"@/constant\";\nimport Router from \"koa-router\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { makeExecutableSchema } from \"graphql-tools\";\n// import Home from \"./home\";\nimport User from \"./user\";\nimport { common } from \"@/middleware/index\";\nimport { router as bizModRouter } from \"@/bizMod/index\";\nimport { unsupported, unauthorized } from \"@/constant\";\n// import { schema } from \"@/graphql/schema\";\nimport  App  from \"@/view/App\";\nimport { renderToString } from 'react-dom/server';\n\n// console.log(\"bizModRouter======\", bizModRouter);\n// console.log(\"schema======\", schema.typeDefs.schema);\n// console.log('App===',App)\nconst typeDefs = `\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => \"Hello world!\",\n  },\n};\n\nclass Route {\n  constructor(app) {\n    this.app = app;\n    // this.router = router;\n    this.init();\n  }\n  createRouter() {\n    this.router = new Router({\n      prefix: \"/api\", // 给路由统一加个前缀：\n    });\n  }\n  // 添加中间件\n  middleware() {\n    // 添加 404 500 中间件\n    common(this.app, this.router);\n  }\n\n  checkToken() {\n    this.router.use(async (ctx, next) => {\n      const {\n        request: { header },\n        cookies,\n        response,\n      } = ctx;\n\n      const token = cookies.get(\"token\") || header.token;\n\n      await getUserIfo(token)\n        .then(async (value) => {\n          console.log(\"value=\", value);\n          response.userInfo = value;\n          await next();\n        })\n        .catch((error) => {\n          response.userInfo = null;\n          ctx.response.body = merge(unauthorized, {\n            msg: \"登录回话已过期，请重新登录\",\n          });\n        });\n\n      //  await next();\n    });\n  }\n  // 添加路由\n  addRouters() {\n    new User(this.app, this.router);\n    // bizModRouter(this.app, this.router);\n\n    // new bizMod.abnormity.script.router(this.app, this.router)\n\n    console.log(\"checkToken====\");\n\n    // this.checkToken();\n\n    // 查询\n    // this.router.get(\"/data\", async (ctx, next) => {\n    //   const {\n    //     query: { query = \"\", variables = {} },\n    //     response,\n    //     request,\n    //   } = ctx;\n    //   const {\n    //     body: {\n    //       // mutation = '', variables = {}\n    //     },\n    //   } = request;\n\n    //   // console.log('cookies===', cookies.get('token'));\n    //   // const { query = '', variables = {} } = ctx.query;\n    //   // const { response } = ctx;\n    //   // console.log('schema==',schema)\n    //   // console.log(\"query==\", query);\n    //   // console.log(\"variables==\", variables);\n    //   // console.log(\"token=====\", ctx.cookies.get(\"token\"));\n    //   // ctx.response.body = {\n    //   //   name:'123'\n    //   // }\n    //   const baseSchema = `\n    //                 schema {\n    //                     query: Query\n    //                     mutation: Mutation\n    //                 }\n    //           `;\n\n    //   const schema = makeExecutableSchema({\n    //     typeDefs: [\n    //       schema.typeDefs.schema\n    //       // baseSchema,\n    //       // typeDefs,\n    //       //   baseSchema,\n    //       //   userType,\n    //       //   songType,\n    //       //   playlistType\n    //     ],\n    //     resolvers: schema.resolvers,\n    //     //  merge(\n    //     //   {},\n    //     //   userResolvers,\n    //     //   songResolvers,\n    //     //   playlistResolvers\n    //     // )\n    //   });\n\n    //   await graphql(schema, query, { ctx, next }, variables)\n    //     .then((data) => {\n    //       const { errors } = data;\n    //       // console.log(\"data=\", data);\n    //       // console.log(\"stringify data=\", JSON.stringify(data));\n\n    //       if (errors) {\n    //         response.body = merge(graphqlError, {\n    //           errors,\n    //         });\n    //       } else {\n    //         // console.log(\"get==\", data);\n    //         // ctx.response.body = {\n    //         //   name:'123'\n    //         // }\n    //         response.body = data;\n\n    //         // JSON.stringify(data);\n    //       }\n    //     })\n    //     .catch((error) => {\n    //       console.log(\"error==\", error);\n    //     });\n    // });\n    // //变异\n    // this.router.post('/data', async (ctx, next) => {\n    //     const {\n    //         // query: { query = '', variables = {} },\n    //         response,\n    //         request,\n    //     } = ctx;\n    //     const {\n    //         body: { mutation = '', variables = {} },\n    //     } = request;\n    //     await graphql(schema, mutation, { ctx, next }, variables)\n    //         .then((data) => {\n    //             const { errors } = data;\n    //             if (errors) {\n    //                 response.body = merge(graphqlError, {\n    //                     errors,\n    //                 });\n    //             } else {\n    //                 console.log('post==', data);\n    //                 response.body = data;\n    //             }\n    //         })\n    //         .catch((error) => {\n    //             console.log('error==', error);\n    //         });\n    // });\n\n    //  const server = new ApolloServer({ typeDefs, resolvers });\n\n    //  this.router.get('/data',server.getMiddleware())\n\n    this.router.get('*', async (ctx, next) => {\n      ctx.response.type = 'html'; //指定content type\n      let shtml = '';\n      console.log('html====')\n      await new Promise((resolve, reject) => {\n        fs.readFile(path.join(__dirname, '../build/index.html'), 'utfa8', function(err, data) {\n          if (err) {\n            reject();\n            return console.log(err);\n          }\n          shtml = data;\n          resolve();\n        });\n      });\n      // 替换掉 {{root}} 为我们生成后的HTML\n      ctx.response.body = shtml.replace('{{root}}', renderToString(<App />));\n    })\n   \n \n\n\n    // 挂载路由中间件\n    this.app.use(this.router.routes()).use(this.router.allowedMethods());\n\n    // this.app.use(this.router.routes()).use(this.router.allowedMethods());\n  }\n  init() {\n    // 添加中间件\n    this.middleware();\n    //创建路由\n    this.createRouter();\n\n    // 添加路由\n    this.addRouters();\n  }\n}\n\nexport default Route;\n","module.exports = require(\"koa-router\");;"],"sourceRoot":""}